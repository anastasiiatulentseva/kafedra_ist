- provide(:title, t('edit_profile'))

%h2.page-header
  = t('edit_profile')
= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f|
  .row
    .col-md-4
      %div
        %span
          %strong
            = t('current_picture')
        %img.img-circle{:src => "#{@user.picture}"}
      .form-group
        = f.label :picture, t('change_picture'), class: "control-label"
        = f.file_field :picture,
                       accept: format_image_extensions_for_file_field(User.allowed_file_extensions),
                       class: 'picture-size-check'
        %span.help-block
          = t('file_size_limit')
    .col-md-6
      = devise_error_messages!
      .form-group
        = f.label :name
        = f.text_field :name, autofocus: true, class: "form-control"
      .form-group
        = f.label :email
        - if devise_mapping.confirmable? && resource.pending_reconfirmation?
          %span.help-block
            Currently waiting confirmation for:
            =resource.unconfirmed_email
        = f.email_field :email, class: "form-control"
      - if @user.student?
        = f.fields_for :student_profile_attributes, resource.student_profile do |student|
          .form-group
            = student.label :course_year, class: "control-label"
            = student.text_field :course_year, class: "form-control"
          .form-group
            = student.label :specialty_id, t('activerecord.attributes.student_profile.specialty_id'), class: "control-label"
            = student.collection_select(:specialty_id, @specialties, :id, :name, {}, class: "form-control")
          .form-group
            = student.label :group, class: "control-label"
            = student.text_field :group, class: "form-control"
      .form-group
        = f.label :password
        %span.help-block
          = t('leave_blank')
        = f.password_field :password, autocomplete: "off", class: "form-control"
      .form-group
        = f.label :password_confirmation
        = f.password_field :password_confirmation, autocomplete: "off", class: "form-control"
      .btn-group
        = link_to t('back'), user_path(@user), class: "btn btn-default"
        = f.submit t('save'), class: "btn btn-primary"
